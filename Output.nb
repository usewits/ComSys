(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    243304,       5052]
NotebookOptionsPosition[    238365,       4887]
NotebookOutlinePosition[    238700,       4902]
CellTagsIndexPosition[    238657,       4899]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"plotstuff", "[", "a_", "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"(", 
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Circle", "[", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "0.5"}], "]"}], ",", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}], "&"}], "/@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Partition", "[", 
           RowBox[{"a", ",", "2"}], "]"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"ToString", "[", "k", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "1", ",", "7"}], "}"}]}], "]"}]}], "}"}], "//",
         "Transpose"}], ")"}]}], "]"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotstuffsized", "[", 
    RowBox[{"a_", ",", "size_"}], "]"}], ":=", 
   RowBox[{"Image", "[", 
    RowBox[{
     RowBox[{"plotstuff", "[", "a", "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"size", ",", "size"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"showPhi", "[", 
    RowBox[{"phi_", ",", 
     RowBox[{"size_:", "100"}]}], "]"}], ":=", 
   RowBox[{"ImageAssemble", "[", 
    RowBox[{"Partition", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"plotstuffsized", "[", 
         RowBox[{
          RowBox[{"phi", "[", 
           RowBox[{"[", 
            RowBox[{"Floor", "[", "k", "]"}], "]"}], "]"}], ",", "size"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "stringLength", ",", 
          RowBox[{"stringLength", "/", "9"}]}], "}"}]}], "]"}], ",", "3"}], 
     "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"distance", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{"Norm", "[", 
    RowBox[{
     RowBox[{"a", "-", "b"}], ",", "2"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6410422635549383`*^9, 3.641042690672819*^9}, {
   3.641042756145008*^9, 3.6410427589576283`*^9}, {3.641042833614562*^9, 
   3.641042835532948*^9}, 3.6410564774970617`*^9, {3.641057873640194*^9, 
   3.641057924347261*^9}, {3.64105806470109*^9, 3.641058073373865*^9}, {
   3.641058334990774*^9, 3.641058339112966*^9}, {3.6410583907117653`*^9, 
   3.6410583909261837`*^9}, {3.64105855959487*^9, 3.6410585700969152`*^9}, {
   3.641058603937564*^9, 3.641058633483509*^9}, {3.64105888068554*^9, 
   3.641058929708267*^9}, {3.6410589981035967`*^9, 3.641059019803043*^9}, {
   3.6410590603939447`*^9, 3.641059060578569*^9}, {3.6424049482365*^9, 
   3.64240495068609*^9}, {3.6424110019076643`*^9, 3.642411002402526*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"stringLength", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"postable", "=", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\</home/abe/uu/comsys/ComSys/pos.txt\>\"", ",", "\"\<table\>\""}], 
      "]"}], ",", "stringLength"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"energytable", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</home/abe/uu/comsys/ComSys/energy.txt\>\"", ",", "\"\<table\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nIters", "=", 
   RowBox[{"Length", "[", "postable", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsRow", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"showPhi", "[", 
      RowBox[{"postable", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
     RowBox[{"showPhi", "[", 
      RowBox[{"postable", "[", 
       RowBox[{"[", 
        RowBox[{"-", "1"}], "]"}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.64105558934508*^9, 3.641055596495398*^9}, {
  3.641055770263446*^9, 3.641055771546513*^9}, {3.641107516084941*^9, 
  3.641107521358205*^9}, {3.642404640656517*^9, 3.6424046468177834`*^9}, {
  3.642404922356127*^9, 3.642405010464664*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     FormBox[
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
Oq4e426mlZWFw609E1rzv3vC9Tbh7V1v8vcpeJ+Od3p3J61o/VptUPu1KjFZ
K963Cdd+ZfL3KUw4Hb/07n5aWYkGpPYg+LXKmP/dE96feODXr6ymf5+C9+m4
pnc300pC04BUE12/ViXmf/eEyW2SmJg4atQoTQ9z+G/Lli2N9CuCd73J36fg
rdX27ds3bNhgJL0TzOTdTyvphXd7fq26BqTOo5XB9Lt69Wpvb2+yZbp0wFNP
PUXbrzDe9ca/T4H/QIwJWsHF9uzZMysriza9v//++7pm8u6nlWwvb+PXSjYg
xRjvm6mVhAPV9WeffRYZGenh4fH000/repjDDQWSenl5gUrMvesd/j6FA/at
Vv5aSZbpmZmZ0Jcw6f1vf/sb3kzeLbXC28tTGe+brJWVsroeMWIEhJeQkHD6
9Glk+2VlZRMnToT04uvry9y7nvb7FMihgT1M0EqyTIfSlJzeHTCTd1etdO3l
nV8rCUx1DY8zf3//Dz/80IH2oTJp3bo1SM3Dux75fQrMpxwwmKAVwTLdoJm8
0AqPyVpJEKprOBEMYDnZyzMxSCd8n4LqUw5IhFZ4hFbG4Wovb7J3PW+EVniE
Vki4Wqab7MfOG6EVHqEVHq424Cb7sfNGaIVHaIWEqw24yR7jvBFa4RFa4eFq
A26yHztvhFZ4hFZIuNqAWywWMz3GeSO0wiO0wkNpA05HdHR0QkICp8bVHuO8
EVrhEVrhwduAV98qWDEqqbGfd2CbPjP2FlcifiQ1NTUrKwvTeMWFP8f50HlA
qT3GeSO0wiO0woO2AS8781Ji4stHispuf7clt027KQWIN5KTk5MzMjIQjVcV
fZQZOfjAT4hDZdQe47wRWuERWuHB2oCX/2d2h5i8QjorgLi4OH3/5LuUHB4S
9dDHl1F+3L+h9hjnjdAKj9AKD9YG/MaR7FbtX3i2X2SAb3DsY38+eRNzXeHh
4TExMfrHlRY8GxmamB4T6mcJS3lyzZnbGvsCVag9xnkjtMIjtMKDtgE/1DM4
pN/yf10pL798aFpc4itf39H/IfhFUH33xFr980//XtolGdW42mOcN0IrPEIr
PFgb8NIvJ8Rlbbt6L5Fc250R3vcw4nNmULenp6fTBXR9X2Z4H0zjao9x3git
8Ait8GBtwKtLDo/t0Pedb8uqKi4fzIvvuvw7xF7ylJQU1PzV3W+Gxs38rKSy
+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
/k9l8NI6LKZgsAkeqRVbM39ozaAfnb1xt2Z6l4L/8ccfNcfdtMHrzvww1KpB
gwYjRoxAHHtf11p07KcqvWRltdO15OAdTlZy8GZqBWMr6P/6k3JlBVNj2k3a
+m1JWfG/Vz0c1m7a6+t1Cgar/f2fyuAdKBhkMFoxN/OHGzA1NdVgO/bG3Tbp
HYKH+w7yFWHcjUd35oetVlA7+fv7668jqLrW6d/2ThImCdVdSwoe8rnBZCVh
plaZmZlr1qyhWnOpLt6Z0WbgkRv6BYPm/k9l8A4XDDK6WjE384dLjo2NRRyo
kd5tUI+74cEB1b48UwGPRW9vb/K4mwryzA9braBrPfHEE1QWJXLXkrGXrNRd
q0ePHgMHDmSSrCRM00ra/0mz5lJdcnh8lzG7iqv0CwbN/Z9y8AYLBhlC8Mw/
GAE8+uijcGvoL7vYT+82KMfd7du3b9iwoTTuHjVqFJQoN2/eZBg8YeaHuVbQ
tU6cOEGzRPV717JBnaxef/316OhoOVnFxMR4eHjAr4ZVsrKaqJW0/xO/nFdZ
vCf/4ekHrv8uE6FgUO//lIKHRyeTgkGCEDzzD0ZY7yk2ceJEKtsNdXq3hzK9
8wjean/mh/nppK6FtyhRdy0blMmqY8eOMCiQJwlTUlLeeustdrH/ijlayfs/
EVpV37m4c97IZ97/r+2csL2CQb3/EwoGOAvDgkFCM3jmH4yQgPS+f/9+GtsN
u+ldjVw5cAreamfmh8fppK6Fsyix27Xsoexarq6VvP9TT6vKKzvzstLzd1zW
tHK/i7pggBtNObrp3LlzrVq1Bg8ezLBgkNAMnsrM/+f/bRwa3eMAYopLSu94
2w3d9K5Erhwov0RQVbxzRNNGmZj4rVoT+zy0kruWnlb6XUuNcmuxq2ul3P9J
0qr0y/FhdX83p7DYvQRlwQD3Y2RkpFwwzJ0796GHHkIGb1wrrJl/dfn3O+cO
aB1ULxB1Lim942w3HE/v6C8R3DvNjaOTo4KR8Vu1JvZ5aCV3LR2t0F1LifJd
JFfXSrn/k62di/qFEZO1wpr53zgxLmfKOwe2prdEnUtK7wjbDUPpHRv8XUoL
53RJfW5FZ1z8Vq2JfR5ayV2LuUWJTddyA63kF0bYaqV+u81krejM/EsOZOLO
JaV3fdsNY+kdH3zFhTeyOuaduLgfGb9Va2Kfk1ZS12JuUWLTtdxAK9lVhqFW
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
syEUo0UoRuDQoUMtWrRgtRIqrbdOmjTJ29s7ISHBLddb2SomAbo1adLk+PHj
DNt0HoRiZLKzs1etWmW8HZv11pEjR2ZmZrrleisrxWxYtmxZTk4O82adAaEY
gbKyMrgvjMxTWe2stxYVFQUEBFRUVCiPdIP1ViaKWbU2aKWkpNSrV2/KlClu
UzBIsFJMjWYfczm2bdsGjy0jLRDWW7t27bp79271j7j0eqtxxQgbtCIjI8eO
Hes2BYOEQcXIu0lTU1M1+5gLAZe2cOFCxIHVtwr+kpsSZvH2C+0w6OW9V39B
rLfOmTNn+vTp9lp00fVWI4rpbtCSFXODgkHGYcX2I3aTenp6tm3b1qWT1dCh
Qzds2KB/XPl/ZneIGLG+8Hr5zQvbJrdtk3vytv5669q1ayGrE1p1xfVWhxWb
u1Z/g5aNYi5dMMg4oNjuFSP9fFuENtffTQpDQqjhXTpZZWZmQlbBH199p7hg
4x+ik195fZ3+euuOHTt69epFbtDl1lsdUOzfHzwZ1PjBsAj9DVqairlowSBj
o5jum0rr1/0lsL53SIveBSX6g2JJMZdOVrGxsfhPK1Zd/rhHc586dUMy5+wO
Rqy3Hjt2rFOnTrrNutZ6qwOKeXj4Nozs/H+ISQl7irliwSAjK6b7plJWVpZn
vbq1az1Qu3aD7NUX7iAaVyrmoskKctTevXtpfuLO9xuHevuGTV2gv94KaU33
OSjhQuut9hSzl9779esTHODdrNWoLxDfriQo5nIFgwwoBjU25k0lGN2kpqa+
/vrC0EBvH99WH53Ury1tFHPFZAW1OqQgwgHqrhUf27p2rdo5E5/VnUJfs2YN
eTyoPIurrLeqFSOk94ULF/r5+XXuGFXbo056tv48J1kx1yoYZGC8BuLovqmk
3E1a+uPWVoFtAxrp15ZqxVwuWUERvmDBAs1/uq9rzZ3St2nTocs/+fzz4x3b
hQY27jrtFf0195kzZxLmRW1wlfVWpWKkec6ywvyYmPC0Xq+9vuiHXRNiui6d
94b+PKeuYi5UMFh/mzkPCAiYMmUK+ci7u0mDG46NiHj+2PXKqnJQrEPW6t0n
9WtLTcVcK1nBswxuJZu/1OpaVT8dffWx+MZ+XvU96tRbV1gkHUmeQocECE8E
ZCSust4qK6b3ImrVjrcm+NSrDYq1zJy8+eLd69KdOtBVzIUKButvbypt3LhR
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
IBAI3ID/D0NlMl0=
         "], {{0, 300}, {300, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> False],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{300, 300},
       PlotRange->{{0, 300}, {0, 300}}],
      TraditionalForm], {192., -189.}, {Center, Center}, {360., 360.}], 
    InsetBox[
     FormBox[
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
9I1BgwZ17NgR8opOnToNLgMk+fn5+abvRd7LoQxes7KPCp4WrugVpoj+HmOb
FiUG1Gme0atd+8dahDi8KlePTmg9fvz4nTt3EqYFTBf7VF80Zl+NNa5YnRMB
aYZW21U9Ki4uTupRSn5Uc6paELRdGbw8p2oheKRZAaszR9AeIHev7p3eMzLI
p4p3QGTvlmldZt1f2SfASN61wSvWqSmCpzJ2cFGvaIvoAaV5W2MbPBpQX70T
SQvCYp+WK6ReSaDlitU5EfBtWvZ3kudUjS4w0nY5eNWcKh5Uhmyszhxp2bIl
yiOlMOfliOajNp67UZh3fHGP+qHDatUJMF2nNpJ3VfDQnZA5gyp4JFdM9Aoi
PH78OM3rSm/sf6714E879/htJ5IRCIt92i+aSq+cNFwxPCcCblUDBgxAXPs7
bZ996HrJ/TlVuCWdPHlS9zW6tUhy8LpzqlTBYxZBGJ454u3tDbJD9SqQ97Sw
7tOWm69T68q7KnhpZZ8qZ5CAN3Zgolc1a9bMysrCv+Ru3vbsHq/suVai3Ilk
BKPFPu0XbUGvnDiu2J4TAUkmMGae0P5e20Oajzt5P2WAaOvVq6c7p6rdeyYF
DyQT5lTxMF0EYXvmCAx5eFKmSf5/lfe8EvN1aq28q4JXruxbAMbYgZVewYMh
dH7cGnHp7R+2vjbwhVXf//rMYrqvRnexT/tFW9YrJ4IrhudEOMv2JwwfPpyq
3l/S9gOKaQZpzlk7p6rdg92+fftevXrVr1+fMKdKBfIiCNszR4CroUOH4rmS
5d2JWKfWyrsyeO3KvgWQjR0Y6lV2dvbo0aMRXi53L28d0zY1e8ulX5S/JeuV
7uYE1Rftol45iVwxPCdCAjzjHDt2jMbT7DdtV0E7p/r+++9HRETIc6rwc6VK
leAawiw9LQiLIMzPHOnbty88teG8EdTyLoGwTq2Sdzl4o5V9CyAbOzDUK2mx
z9zLpeDYcyFVfqtEcqTvKbsDk/VKu6FR9UUz0SsCV0zOiVBCqkXCe5optV0X
yjlVSK5q1Kghz6kCewwPAZFhFDzbM0ec9/dyINbT9eVdgtE6tUreIfjXX3+d
vLJvAUbBs9UraXPCf//7X1e8XHT1SndDo/xFM9QrpwFXDM/RkCHVIuHq/fW1
nQDl8yCP4CXoBs/j7SR5N+fKQN6V0K7sh4eHL1y4UFrZB73y8vKCv5JX9i3A
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
s2fPBgUF5ebmMmntxIkTderUOXfuHJPW3BPAGDzNCcaMIHoULXr27AmPzAwb
fO211/r378+wQXcDMIY6Nw0NSLcqEmOiR1Hhs88+43HkTXBw8LFjxxi26T4A
xiA7YnuQxM2bN+vVq1cxGBM9iha9evVavHgx82bfeuut8joeiDeAsffff595
sxWGMdGjqCCdwUdeNrWGixcvlssxebwBjPn5+V29epV5yz/99FMFYEz0KFps
2rSpXbt2nBpPSUnZvn07p8bLC8BYWloap8YTExM9nTGGPUq7sxRGd0ZGRgXb
WQofcNasWYgLS2/mvD8sKcTh7Vs3uufUnVd+QbxmypQpNh+bbgOAMZztvBXG
Xn31VU9njEmPMtpZOnjw4G7dulWwnaWQYK9cudL8uqKzk6ObDFiRe63o5+82
jW4WNuwIwq996dKlQ4YMcT1It4JgjAwX+SHvLFXyU2F2lqanp+/atQt/fent
vJw1z7ZImPbV7d9+aVSN0rt377i4uAqTM0hQMWZaiaPLmBG2bNnSoUMHjtHz
hys9ynRnqZafCrCzNDIyUnsYkFG/GjOyR2xA1cpVArt+8J3UocjVKCNGjIA/
VZicQYLMGKpSyc8nyMfLq7K/xJjpgIU2H3nkkfL+iC5Bt0cZoeTS+vYNfCpX
Ceqy+Fw2YmepET8evbMUVGvnzp3y/yIqvNL9fKr4+Dae8+FHptUomzdvBtWq
MDmDBGBs2bJlNJVKbwfV8q7mHdz6scdNSwuTk5OTkpJs+yw8oOpRMoz156W/
jUut4YiOSTLfWSr1KN0/ee7OUsjeoQ84aSq8rnyzLsgvuFKlSjExMWTVWrJk
iZy9V4CcQQKMERgs+EolILZbp6TKlSp7+/oCIYQrYcA+9dRTPj4+Hi1Wco+S
YSrsLZqFPPjAg8kdu5omS8oepYWH7iyFLGjmzJnmFV6FudkREX8+dO3OLwUj
M2Mf8g745LMjpmNq4sSJqlk+j84ZpEoch8MxatQo86vLGOsyeVFgYMBfhiRG
pi389Evzzz5+/PixY8d6dGmh1KOkn0nCfr9HnTp9IqCWd5O4P7/2jnmypO1R
KnjizlJID4AiRIVXyfWDc56MqfdQ5arVatZfeuKC9FvymIJbBiie6peemzNI
lTirV6+Gf00vLin55cWn0n2revlU9W2UPnrdD8VOxGePj4+XGPNcsYJ0MSMj
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

         "], {{0, 300}, {300, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> False],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSizeRaw->{300, 300},
       PlotRange->{{0, 300}, {0, 300}}],
      TraditionalForm], {576., -189.}, {Center, Center}, {360., 360.}]}, {}},
  ContentSelectable->True,
  ImageSize->600,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{{3.6424049597826567`*^9, 3.642405012142088*^9}, 
   3.642405074662251*^9, 3.642407387126009*^9, 3.642410938974242*^9, 
   3.642410979444436*^9, {3.642411428596583*^9, 3.642411457191486*^9}, 
   3.6424115174213753`*^9, 3.642411729327258*^9, 3.642412070624312*^9, 
   3.6431077015305347`*^9, 3.643108442457252*^9, 3.643108621563767*^9, 
   3.6431087121015387`*^9, 
   3.643109836603025*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
AAgOTeU8HRjIPPm1gtNZW5LOgwVaC7PdJQqqo4h8dYAYlZVzpnlKR65ckaRb
Ru2agtrcAJhblUgePbKM9lOEjRDTrMPtJNNMSaSLT7pbf6esCINLpY1ye/Kc
4iWXIQxpNj10GBVd5pGFOK8IMBHBivhoJYncpdre30s35Kg+xIEkO7EPoZgc
ss1OuWRStFME27wqxnMkI1601GPfUqcIDhJ83DdqozLzqIqYJyijDt61e7Ra
32rBx5M3nREbLDxfaWueeeYpBDXPD5aNQ/rfan1K9SNOFR6Rl9iidZRg9b32
DcN6jL71szMVJjUxiedqA9nm5jXtIB/hVS/MIBk16iLN2WrCBAACUzNwpx+E
6DK5QPcwuCmrfIIa6/Nl27vS6AmNlU5PWdt9wkdYxhTwk3Cifu98bssTZXBo
MNKru3Bc+7/sLhuzeK/edlt1V1Dhs1zXnPZvODrgofIF5pB9lvZhNqWuYvdT
1fIlDWtm1J00LyRSNZY3Z8wCbmIZj2pv9skXm7S2VWKMfMlSaSJnfVPeqgz1
wbVNuKcHJFZEUoNxuuaoLIbgSYkOvEfTXHSxvDRCTeATAyn/5pCZuTqvNKrZ
A9WxJPMUhgkf3TnQzs4TloGpyufZkmeLm4QN5Za0crAha2v4yiV9W1eTIyEU
7M7UEhknJ7YoA8m2WZRxclnl9+ylCEl6KFdQI2Lb6XeMVWRV78PIGk/u+6j3
HFZR1JS1lD1FLbbosk87hMppyvJ5sgPZyGS6tzcb1wyBDoU25evZa1rDl7jc
jxDUcXrFwDv9mqGa7Rk+8L44c6/tY/v9zo/7Xnwt3njz7fjwkxExfuKkSnwi
Ui5FSb/mhOw6shQg1EQTef4qNyFgRA+yq3p3YJ/2GwpIigEX6kl5S6Z45/ol
OrPWxguWRs7DZD4g5KxPpmt4bsxbceFO68Yi35+35rl+Mc9P1o3jrrgxFl9y
yYopACq3H7NqWGDwhQ/61U/TL6xs6Hm4NIoTSxYKnrUl74yNSuCWQ1DCVDCv
vUsOIQu34oxcQEau9UR+M2td2AuDyNUURbtHW3XfX1O/hycDUetzBAVQhHSw
BZQJq3KSQrPqft4gOWdr9Dy6oRW7+UbdA0TjgC95MsqDtBnq70hGz/BrbmpM
4SNUNfV2pKTH5nz4xfLodH8+xhZSvXy/QxoidpF0Um1pKqVK4+YPXF5irqQ0
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
vxPfPfUv8dffHhZf/0oJzs8d3TXY9mKzC2e3xsOku06LQ/bZPfb98V/immJ2
brjptnj02QmY1fVk5dsUz8yZdNuJ9stPFMk5befYat+T44Irr4oLjv9irLnB
wXHnlEFPlhN/9NFHd96bFU//fft4+yY/ib9cdW1j/W4YfTefoX2Ppcw+jkNE
QABlB9Nl/Rxy5tSn4+ajtowtfvC7uOTyC+PnB34ptvjSyTFm2qB3K54ciOWa
okzjY/Tpn4wNPv/ruMJUbhgdd9zzULe3I9TbmiHz/8ubLm9SSjDF8TFHNl4M
U+yySMb9NzFF4iV7h7dZsenPxs1/OSH2+PQH430bbBE7//i8uPWJaQPmDkcy
um6nP+6mOP2IHeN9b1+90V+rr7VpnHjB9fHsjH7Ql3uOchQ5ByQj/NqStke/
pjwQ5/5wx9j4ve+MdT785Tj2H88WqLRLkerACfFevjL90bNj6/XWire9pX7+
PdvFDRMG2uTxRMVqQwSEokSEbtQ5u9jbac/eGr/a9wux2SYfjs/ucnj84bZB
X6EbcPdTitPi0dEnx2c2XLfJSa+73iax3e5Hx30dHEkLSpToLZNEyNsnA4yY
MTZu/9upccCXPxEf23zb2PvEi+LOpwYZIc2RUXfLiPG3xu+P2z0+un6dwwc+
F6f+fXSMHcII+5A//elP2zl0e8H2GTEmLjxm9/jkhz8YH/n0bnHSv8Z2GZHp
jhIXtK/MePzP8dXNNor3v69+fpOdY/TE9hWZFYy44oorWmn4r3AgA/AXwwHn
hoZywN4fatqkzr0Yu+k2Xdil8vPci7H1gfEqzuaGw5CWormDkgVmFJi39+ZY
Su6gZLEQ4C/+yZBdJraVB8scz5o1Kwfk7EqRqEtR29+1A2YPYspl3Lhx/2NW
tuZ/+5Ko9Ve96lWNTcsl2dJ+9atf3cQz5Uu5pKxVY/Wv6cxPEtjIjz/+eE7E
PjrXxQa5X4mmujt4trdR4rlbgqaZR546O3G50a0pAKl30jMH9Dvxk23Vzv6Z
lVmFE+W5Mq4OMksq3HnnnbkyKk1gPXRleVakeGDdjTwzF2XVRbcTcQoHA829
syWYSxLyd5Zke/L5luR3nSXl/i09Q7ohJLeqzRMUbIr7fUVQblX7uN2aIuDt
VnW2/XKQvYze3VjORo6sukcc2IWi3Fi2uShC9KXy95DNeUioFYO7O9Zeyhrl
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
Fk3RW9WoJlEg32COUoepk+T1GECeFPbxxPzeNpLf03UZSuVZuqqYugcuqVTU
Kib2RTBoeIVqFrQmIybEGU9H3ITkGWjFWs57VP0CXSzkAIvkD16giqqMyw1h
Jakv/919FLKwsjeTxduMnImTNTOA2CQTNlPZFidLRrJNAVsLyxbucLLeIhrK
SYyo+xIvjpMrvigujKg/5sbKw9B0nd7BEp5Su1XCV5hHilYZma+OQj6zPGTR
PL0jTy9pXHDVCOqlgMaXIEaw18kCZ34iA3gBrRRcgf+wnH62fhVotMffe6SR
JaNzi5c9vP7YKHRMLTA5tL6kKKk80pt9r3mHIIcoIig/jo2jhfyORsteeP7N
ZNNiFKqv+Lhh3RlJRwx34UJephCxezA9e34XBZrz5TxICNRipfk0I6uJN8+w
kHj+KsI0IQYJHPmd2SgP1zmONCSvnpLHWw6XebgTkPehOaZuzPSLfc7fLfbZ
du/GWc6aQyZFbeWjnEWZWuU2emTsbRR7VNTDbZF+5JRRWekqICMc+W8/Az/v
sEE8E+LGVhdtOLLDebO3ikK+brd2DhD6vGjO91C1cJsRM1XKODsV1oNbjbTX
o/Jt2ZwXx9k8C10DgO5dEedkyFObbXxhriwwKHYGpbjYmvYg58iGyNnbLMsZ
Co6JY2HS4h3CElp5gUKA4Z31oQOJ6GCR/MIjjV3WmE9jASzST+36eoqcSpHT
ICb+EBlqFD6y70zt0drdkqO/+PTEGoK5icV/bx3m3MIhK0MoalRqr0RQc6X/
skPp38yPUcFBUOcnUuXS5qy1orZImdjN/kAiSX4lJ4kjJO4q5M9rlNxM7la/
6ur8jUQJdMvaWilLRppSy8iFmx8DM0b6A8WMT8YL1AblxDVL/wKk6VWOOCUg
PmMyRVtpZ8wcafn8Q1hM55ndC7F4gaEsznQgrpIB+yiMIrww2zI8tjN90zIx
hWGlPIcmzOaNxQvUH9M7UtH41V6/7Fk2R7lqEfFXzSNLBkRs/kZJkT4Hml9e
SZw9l21QWg521PNa7Vl6z1BkCmUWJM/fWQLMOA9YcJVzzasqnK3CwHwaL/GZ
1ip87j29UANAsABSTKGxav2CtjFyt0UII4mvlCy2lC+lWfUrMukrBW05H/DO
1lllyvN3pikBL8vQXk9dqBEcgTvbKAB1zwuJmX1C04UnAogszIfggAiXQMe8
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
6Bjd9hr4gm2nqayfTTjS/+s984qWQqwT1WR1VkCIgJ4vy8kTYzk5i0rgnFEd
KghOKXXfQSVTJywoDR5+33f6eyGd54zV2oZeyzp5ZJsfhhPv+m8rL5DPU4Kw
KWxmaplnIUutxTdv+B35HPxmKxgwaHftRzVsQDProQmtz8S63Lc23hYR8N98
/H6d1l6kZ2vQYorId7mcDZxxjvGydp+yZho2F2y27KZZehbWs/Tyq+YAdGqU
pUn/qbfqxRu0IAR3noMA6LQQnSe55o9nUAZx+TYJ+sLu+ay3TD1DM6BmDGAe
daiczAhldMS+SLD3Dy0NAjx3IjDCfzNlovIuwFGUivuPAD5yjgBHdSsrIO/u
P0OVFTiFcvbZf4iTD94xtlrv7fHWVVeLNd//iXj1m98eF150UXvuiXYwHE+r
u7ouiBkgzGJllWPi+eWJl7khOXvsmA81AG8oVZvwjqyfozLtUDD0xBIRsxc8
97zfP2mRehZ1Stx249Xx65NOjl/99o/xm18fH3vuuFUs//KV47Nbb9NQs7ps
C3ZWifYyI6mp5wTfmiJuzDChKivPhc4NwVVjd7uW+SL6WXO2JumfLVm+kan0
ldANW008S15AJDQKEpzF4NTzUYk3oZDnFFfJ2COWaZFd38wWd2xONhmqfUNT
a1NfdonErXk7wmcN5XFIZGyohZqgzM17eWeiRm6yL1sZPds/iH6yA5LUNCAO
NpV6ZXtQgijAsGctEAr8QRjetd/l8QGKintCJfIOLMjzFHS3MRQ74l0pK7sl
7W3dXh6aC1y7zXd7bVGw2RqBGixfGtpFimCCJ25BMSylI4QrOOh3Fs9pahG+
fNvkClMxKYsvcg5oMRDM3C5acSCzX5dP+hxIZjdQ67Z+HqKzKs5yoE9e76Fu
CsByXw+3eNBe6RRUojdRrW5vN5O3kWvPPxcv4IZ6TofnLLL2oBvojQbufm91
Vskx78P9VQ3cQZKSzFazCXd/RC0Ezsp4CNlyQ4wrWuFleB/sIcxSuu1oeZ+u
bNMd0NP3o3oxmWhG1dpcV2Lduv2PG0ffuAqfuAB0FJezy75vLwroC88V6BR6
9jXpH0/q3bKhcekjYC6fHZadfJ2QcJjE90wfBhPdlolNWPTUU08ll7vo9jcc
WW2Zequw5gbxXhCzTOMDOnaU2QScoQOzp2V2WKVCOVq0BspBBI5btucgCkYp
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
\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Maximum", " ", "difference", " ", "between", " ", "distances", " ", 
    "between", " ", "states", " ", "in", " ", "string", " ", 
    RowBox[{"(", 
     RowBox[{"should", " ", "be", " ", "near", " ", "zero"}], ")"}]}], "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Max", "[", "#", "]"}], "-", 
         RowBox[{"Min", "[", "#", "]"}]}], ")"}], "&"}], "[", 
      RowBox[{"Norm", "/@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"postable", "[", 
          RowBox[{"[", "k", "]"}], "]"}], "//", "Differences"}], ")"}]}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", 
       RowBox[{"Length", "[", "postable", "]"}]}], "}"}]}], "]"}], "//", 
   "ListPlot"}]}]], "Input",
 CellChangeTimes->{{3.643108027362082*^9, 3.643108192168421*^9}, {
  3.643108250659891*^9, 3.643108304796591*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQEf7BkYvmx3O77ADirgwM7OLyfg89sewuVwYIhv
KNIPZITyBRxkKtYEIeRFHCakir20X+kM5Us4MGysWecGl5dxKOG492F9YSSU
r+Dg0lkjzeILk1dy0IhSfXpibgqUr+Lw+MaBWR/h8moOd86usN/vkQ3lazgk
LJjPtM0PJq/lMK3LxyygrRTK13GIUQyf5+wPk9dzEN66aI2OdB2Ub+Dwv7ft
6Tm4vKHDrivhS6JWNkP5Rg5v9HJrUwNg8sYOUwOsE56IdEL5Jg5l7l78IoEw
eVMHraB9qdJL++0BT6tUxQ==
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 21.}, {0, 1.7072945210715864`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.643108028660639*^9, 3.643108069450265*^9}, {
   3.643108122125758*^9, 3.64310819248009*^9}, 3.643108305714731*^9, 
   3.643108446440763*^9, 3.6431086270559*^9, 3.643108713893808*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Rate", " ", "of", " ", "change"}], "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"distance", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"postable", "[", 
          RowBox[{"[", "j", "]"}], "]"}], "[", 
         RowBox[{"[", "k", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"postable", "[", 
          RowBox[{"[", "j", "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"k", "+", "1"}], "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", 
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{"postable", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "-", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "nIters"}], "}"}]}], "]"}], "[", 
    RowBox[{"[", "50", "]"}], "]"}], "//", "ListPlot"}]}]], "Input",
 CellChangeTimes->{{3.6424116473248796`*^9, 3.642411657957747*^9}, {
  3.6424117435501757`*^9, 3.6424117530534077`*^9}, {3.642411834046556*^9, 
  3.642411861580894*^9}, {3.643108484679845*^9, 3.643108497859559*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQEf7IWPLpqUtqfRHirgYIzC53A4c23ZDJUDML6A
g572B0b1/TC+iAPnAaMlnvtgfAmHHb/u9/3dC+PLOHxienwtZhuMr+CwU804
sn8njK/k4BJ95mj2ChhfxeERb40872YYX81hgcljboMpML6Gg6U8c5ztahhf
y+Hzho7TgdUwvo6DGOdly7WLYHw9B5NZBztUE2B8A4etzVyLu2fC+IYOOf5a
6245w/hGDlbf7olHTITxjR3WtruuNNKE8U0cglK6vEs7YXxTh6wWHRkVkUZ7
AOtJVqE=
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.008322793884144761},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 21.}, {0.008339197263526017, 0.008667264851151123}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.642411736236903*^9, 3.642411753605023*^9}, {
   3.6424118347283707`*^9, 3.642411863377777*^9}, 3.642412073995701*^9, 
   3.643107706035035*^9, 3.643108471869328*^9, 3.6431086316890593`*^9, 
   3.643108719411495*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"distance", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"postable", "[", 
           RowBox[{"[", "j", "]"}], "]"}], "[", 
          RowBox[{"[", "k", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"postable", "[", 
           RowBox[{"[", "j", "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"k", "+", "1"}], "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", 
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"postable", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "-", "1"}]}], "}"}]}], 
      "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "1", ",", "nIters", ",", "1"}], "}"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.642407504052932*^9, 3.6424076263928747`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`j$$ = 21, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`j$$], 1, 21, 1}}, Typeset`size$$ = {
    360., {105., 109.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`j$11182$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`j$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`j$$, $CellContext`j$11182$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ListPlot[
        Table[
         $CellContext`distance[
          Part[
           Part[$CellContext`postable, $CellContext`j$$], $CellContext`k], 
          Part[
           Part[$CellContext`postable, $CellContext`j$$], $CellContext`k + 
           1]], {$CellContext`k, 1, Length[
            Part[$CellContext`postable, 1]] - 1}], PlotRange -> Full], 
      "Specifications" :> {{$CellContext`j$$, 1, 21, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{407., {146., 154.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.643108639516621*^9, 3.6431087243405323`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"energyplot", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Max", "/@", "energytable"}], ",", 
      RowBox[{"Mean", "/@", "energytable"}], ",", 
      RowBox[{"Min", "/@", "energytable"}]}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "50"}], ",", "50"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<iteration\>\"", ",", "\"\<energy\>\""}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<max\>\"", ",", "\"\<avg\>\"", ",", "\"\<min\>\""}], 
      "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6410557817363567`*^9, 3.641055843591517*^9}, {
   3.641055875487439*^9, 3.6410560563699503`*^9}, {3.641056087616211*^9, 
   3.641056095213339*^9}, {3.6410574909716787`*^9, 3.641057623802621*^9}, 
   3.6410592528359213`*^9, {3.642403908274809*^9, 3.642403921033759*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., 10.351516}, {2., 9.144538}, {3., 8.276348}, {4., 
         7.674757}, {5., 7.292885}, {6., 7.086122}, {7., 7.042005}, {8., 
         7.119903}, {9., 7.327938}, {10., 7.650992}, {11., 8.079851}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., -7.7627819004975125`}, {2., -7.941826179104478}, {
         3., -8.11326915920398}, {4., -8.274264452736318}, {
         5., -8.42370527363184}, {6., -8.561611616915423}, {
         7., -8.68873409950249}, {8., -8.80625143781094}, {
         9., -8.915641094527365}, {10., -9.018394273631841}, {
         11., -9.115950701492538}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1., -16.669496}, {2., -16.669324}, {3., -16.669151}, {
         4., -16.668977}, {5., -16.6688}, {6., -16.668623}, {
         7., -16.668443}, {8., -16.668262}, {9., -16.66808}, {
         10., -16.667896}, {11., -16.66771}}]}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0., 11.}, {-50, 50}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"iteration\"", TraditionalForm], 
       FormBox["\"energy\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{0., 11.}, {-50, 50}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"max\"", "\"avg\"", "\"min\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.231], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.641059253624802*^9, 3.641107504181059*^9, 
  3.6411075398239822`*^9, 3.641107671373063*^9, 3.6411087486356583`*^9, 
  3.641114568024171*^9, 3.642403647892809*^9, 3.642403821255069*^9, 
  3.642403921610197*^9, 3.64240425259083*^9, 3.642404537678396*^9, 
  3.642404861038097*^9, 3.642405020101046*^9, 3.642405084877499*^9, 
  3.642407430487941*^9, 3.64241101110854*^9, 3.642411481822022*^9, 
  3.64241156800681*^9, 3.642411879776432*^9, 3.642412082539618*^9, 
  3.643107768148004*^9, 3.643108540401807*^9, 3.6431086714068613`*^9, 
  3.643108748882208*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"animation", "=", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"showPhi", "[", 
      RowBox[{"postable", "[", 
       RowBox[{"[", "iter", "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"iter", ",", "1", ",", "nIters", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.641056313191354*^9, 3.641056428729134*^9}, {
   3.64105655074085*^9, 3.6410565512496357`*^9}, {3.6410569462975483`*^9, 
   3.6410569919118967`*^9}, {3.64105706344059*^9, 3.641057130634218*^9}, {
   3.6410579433378963`*^9, 3.641057951695396*^9}, {3.6410580107482367`*^9, 
   3.6410580519548683`*^9}, {3.641058085173944*^9, 3.641058113033544*^9}, {
   3.641058263203374*^9, 3.6410582750478888`*^9}, {3.641058317499765*^9, 
   3.641058317760549*^9}, {3.6410583965635853`*^9, 3.641058398024808*^9}, {
   3.64105852644249*^9, 3.641058546270385*^9}, {3.6410590791460257`*^9, 
   3.641059079718616*^9}, {3.641107700658399*^9, 3.641107702288027*^9}, {
   3.64240437252596*^9, 3.642404403958577*^9}, {3.642404702701808*^9, 
   3.642404716692628*^9}, {3.642404874849948*^9, 3.642404898886633*^9}, 
   3.642405027585641*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Animate", "[", 
  RowBox[{
   RowBox[{"animation", "[", 
    RowBox[{"[", "k", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "1", ",", 
     RowBox[{"Length", "[", "animation", "]"}], ",", "1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.641056433052998*^9, 3.641056473199197*^9}, {
  3.641056507808794*^9, 3.6410565082180653`*^9}, {3.641058312449808*^9, 
  3.641058314299498*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`k$$ = 20, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`k$$], 1, 21, 1}}, Typeset`size$$ = {
    300., {147., 153.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`k$74191$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`k$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`k$$, $CellContext`k$74191$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Part[$CellContext`animation, $CellContext`k$$], 
      "Specifications" :> {{$CellContext`k$$, 1, 21, 1, 
         AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{347., {181., 189.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.641108808445537*^9, 3.642404413579494*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Export", "[", 
   RowBox[{"\"\<moving_particles.gif\>\"", ",", "animation", ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"60", "*", "3"}], ",", 
       RowBox[{"60", "*", "3"}]}], "}"}]}]}], "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.6410566340743227`*^9, 3.641056676452527*^9}, {
  3.641057259726947*^9, 3.641057265025906*^9}, {3.641058198158046*^9, 
  3.6410582015394697`*^9}, {3.6410591451101007`*^9, 3.641059151725699*^9}, {
  3.641108772937326*^9, 3.641108781197803*^9}}],

Cell[BoxData["\<\"moving_particles.gif\"\>"], "Output",
 CellChangeTimes->{3.641056685966839*^9, 3.641057013046555*^9, 
  3.641057185653916*^9, 3.641057274092762*^9, 3.641058226056181*^9, 
  3.641059159626593*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Export", "[", 
   RowBox[{"\"\<energy_vs_iteration.png\>\"", ",", "energyplot"}], "]"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.6410574735598373`*^9, 3.641057488218793*^9}, {
  3.6410576295355797`*^9, 3.6410576324548607`*^9}, {3.641108782987274*^9, 
  3.641108785057433*^9}}],

Cell[BoxData["\<\"energy_vs_iteration.png\"\>"], "Output",
 CellChangeTimes->{3.6410576369977837`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"2", "g"}]}], ")"}], 
    SuperscriptBox["x", "2"]}], "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"2", "g"}]}], ")"}], 
    SuperscriptBox["y", "2"]}], "-", 
   RowBox[{"4", "g", " ", "x", " ", "y"}]}], "//", "FullSimplify"}]], "Input",\

 CellChangeTimes->{{3.641110074871613*^9, 3.64111010767553*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"x", "-", "y"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"x", "+", 
    RowBox[{"2", " ", "g", " ", "x"}], "+", "y", "-", 
    RowBox[{"2", " ", "g", " ", "y"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.641110103948241*^9, 3.6411101080132217`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"3", "+", 
       FractionBox["1", "10"]}], ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "+", 
       FractionBox["1", "5"]}], ",", 
      RowBox[{"5", "-", 
       FractionBox["1", "5"]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", 
      RowBox[{"6", "-", 
       FractionBox["1", "10"]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"6", ",", "7"}], "}"}]}], "}"}], "//", "ListPlot"}]], "Input",
 CellChangeTimes->{{3.6411105258208103`*^9, 3.6411105792060432`*^9}, {
   3.641110991596229*^9, 3.641111058329784*^9}, 3.6411148369483747`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{2., 3.}, {3.1, 4.}, {4.2, 4.8}, {5., 5.9}, {6., 
      7.}}]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.9375, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{2., 6.}, {0, 7.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.641110546728557*^9, 3.6411105798383093`*^9}, {
   3.6411110076587057`*^9, 3.641111058871085*^9}, 3.641114837539793*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"phi", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"3", "+", 
       FractionBox["1", "10"]}], ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "+", 
       FractionBox["1", "5"]}], ",", 
      RowBox[{"5", "-", 
       FractionBox["1", "5"]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", 
      RowBox[{"6", "-", 
       FractionBox["1", "10"]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"6", ",", "7"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.641110793753723*^9, 3.641110794561707*^9}, 
   3.641111067117848*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["31", "10"], ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["21", "5"], ",", 
     FractionBox["24", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", 
     FractionBox["59", "10"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "7"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6411107952905607`*^9, 3.641111068208111*^9, 
  3.6411162307328997`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alphaApprox", "=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"phi", "[", 
             RowBox[{"[", 
              RowBox[{"i", "+", "1"}], "]"}], "]"}], "-", 
            RowBox[{"phi", "[", 
             RowBox[{"[", 
              RowBox[{"i", "-", "1"}], "]"}], "]"}]}], ")"}], ".", 
          RowBox[{"phi", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "/", 
        RowBox[{"(", 
         SuperscriptBox[
          RowBox[{"Norm", "[", 
           RowBox[{
            RowBox[{"phi", "[", 
             RowBox[{"[", 
              RowBox[{"i", "+", "1"}], "]"}], "]"}], "-", 
            RowBox[{"phi", "[", 
             RowBox[{"[", 
              RowBox[{"i", "-", "1"}], "]"}], "]"}]}], "]"}], "2"], ")"}]}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "2", ",", 
         RowBox[{
          RowBox[{"Length", "[", "phi", "]"}], "-", "1"}]}], "}"}]}], "]"}], 
     ",", "0"}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.641116196819729*^9, 3.641116333548255*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   FractionBox["701", "404"], ",", 
   FractionBox["45", "19"], ",", 
   FractionBox["1099", "404"], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.641116311013748*^9, 3.641116334729746*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6411164116895037`*^9, 3.6411164223374577`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"alphaApprox", "[", 
      RowBox[{"[", "k", "]"}], "]"}], ",", "1", ",", 
     RowBox[{"-", 
      RowBox[{"alphaApprox", "[", 
       RowBox[{"[", "k", "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "1", ",", 
     RowBox[{"Length", "[", "phi", "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6411163725985727`*^9, 3.641116438417179*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["701", "404"], ",", "1", ",", 
     RowBox[{"-", 
      FractionBox["701", "404"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["45", "19"], ",", "1", ",", 
     RowBox[{"-", 
      FractionBox["45", "19"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1099", "404"], ",", "1", ",", 
     RowBox[{"-", 
      FractionBox["1099", "404"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.641116403958469*^9, {3.641116434354796*^9, 3.6411164392740803`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"m", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"701", "x"}], "404"], ",", "1", ",", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"701", "x"}], "404"]}], ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       FractionBox[
        RowBox[{"45", "x"}], "19"], ",", "1", ",", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"45", "x"}], "19"]}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       FractionBox[
        RowBox[{"1099", "x"}], "404"], ",", "1", ",", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"1099", "x"}], "404"]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.641116161694384*^9, 3.641116190295753*^9}, {
  3.641116344549058*^9, 3.641116359217854*^9}, {3.641116515833622*^9, 
  3.641116533679605*^9}, {3.641116571650711*^9, 3.6411165818887672`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6411170326009493`*^9, 3.641117033896359*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"m", "=", 
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "+", "x"}], ",", "2", ",", 
        RowBox[{"1", "-", "x"}], ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"1", "+", "x"}], ",", "2", ",", 
        RowBox[{"1", "-", "x"}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        RowBox[{"1", "+", "x"}], ",", "2", ",", 
        RowBox[{"1", "-", "x"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "2"}], "}"}]}], 
     "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6411106038365088`*^9, 3.641110696394281*^9}, {
  3.641116483309939*^9, 3.641116503581114*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Inverse", "[", "m", "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{"x", "\[Rule]", "0"}], "}"}]}], ")"}], ")"}], "*", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", ",", 
        RowBox[{"3", "/", "2"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"7", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"8", ",", "3"}], "}"}]}], "}"}], "]"}]}], ")"}]], "Input",
 CellChangeTimes->{{3.6411106985983*^9, 3.6411107757832127`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", "4", ",", "5", ",", "7", ",", "8"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", 
      FractionBox["3", "2"], ",", "2", ",", "2", ",", "3"}], "}"}]}], "}"}], 
  " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["3", "4"]}], ",", 
      FractionBox["3", "2"], ",", 
      RowBox[{"-", "1"}], ",", 
      FractionBox["1", "2"], ",", 
      RowBox[{"-", 
       FractionBox["1", "4"]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      FractionBox["1", "2"], ",", 
      RowBox[{"-", "1"}], ",", "2", ",", 
      RowBox[{"-", "1"}], ",", 
      FractionBox["1", "2"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "4"]}], ",", 
      FractionBox["1", "2"], ",", 
      RowBox[{"-", "1"}], ",", 
      FractionBox["3", "2"], ",", 
      RowBox[{"-", 
       FractionBox["3", "4"]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1"}], "}"}]}], 
   "}"}]}]], "Output",
 CellChangeTimes->{{3.6411107021143227`*^9, 3.641110776522526*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"(", 
    RowBox[{"(", 
     RowBox[{"Inverse", "[", "m", "]"}], ")"}], ")"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.641110784230377*^9, 3.641110791315465*^9}, {
  3.641110845084703*^9, 3.641110892400776*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"A", ".", "phi"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.64111079710183*^9, 3.6411108371167927`*^9}, {
  3.641110895086686*^9, 3.6411109168956823`*^9}, {3.6411109515971413`*^9, 
  3.641110966279766*^9}, {3.641111083430003*^9, 3.641111104011135*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.019444444444444445`], AbsoluteThickness[1.6], 
       LineBox[{{2., 3.}, {1.1, 1.}, {3.1, 3.8}, {1.9, 2.1}, {6., 7.}}]}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{1.0234375000000002`, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{},
    PlotRange->{{1.1, 6.}, {0, 7.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.019444444444444445`], AbsoluteThickness[1.6], 
       LineBox[{{2., 3.}, {1.71, 1.55}, {3.22, 4.1}, {3.17, 3.25}, {6., 
        7.}}]}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{1.64296875, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{},
    PlotRange->{{1.71, 6.}, {0, 7.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.019444444444444445`], AbsoluteThickness[1.6], 
       LineBox[{{2., 3.}, {2.5, 2.34}, {3.4, 4.34}, {4.2, 4.22}, {6., 
        7.}}]}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{1.9375, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{},
    PlotRange->{{2., 6.}, {0, 7.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.019444444444444445`], AbsoluteThickness[1.6], 
       LineBox[{{2., 3.}, {3.385294117647059, 3.2323529411764707`}, {
        3.523529411764706, 4.488235294117647}, {5.1911764705882355`, 
        5.179411764705883}, {6., 7.}}]}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{1.9375, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{},
    PlotRange->{{2., 6.}, {0, 7.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.019444444444444445`], AbsoluteThickness[1.6], 
       LineBox[{{2., 3.}, {4.315384615384615, 4.1692307692307695`}, {
        3.6076923076923078`, 4.584615384615384}, {6.176923076923077, 
        6.1461538461538465`}, {6., 7.}}]}}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{1.934735576923077, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{},
    PlotRange->{{2., 6.176923076923077}, {0, 7.}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6411108002667303`*^9, 3.641110967309086*^9}, {
  3.641111072931403*^9, 3.6411111045657473`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"A", "/.", 
     RowBox[{"{", 
      RowBox[{"x", "\[Rule]", "4"}], "}"}]}], ")"}], ".", "phi"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6411113077915077`*^9, 3.641111323928616*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], 
     LineBox[{{2., 3.}, {3.385294117647059, 3.2323529411764707`}, {
      3.523529411764706, 4.488235294117647}, {5.1911764705882355`, 
      5.179411764705883}, {6., 7.}}]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.9375, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{2., 6.}, {0, 7.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.641111311833304*^9, 3.641111324735631*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"x", ",", "y", ",", "z"}]], "Input",
 CellChangeTimes->{{3.6411113614209223`*^9, 3.641111362780856*^9}}],

Cell[BoxData["yo"], "Input",
 CellChangeTimes->{{3.641111373294148*^9, 3.641111376823036*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"y", "==", 
  RowBox[{"yo", "+", 
   RowBox[{"g", 
    RowBox[{"(", 
     RowBox[{"z", "-", "x"}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.641111383782886*^9, 3.641111400804551*^9}}],

Cell[BoxData[
 RowBox[{"y", "\[Equal]", 
  RowBox[{"yo", "+", 
   RowBox[{"g", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "x"}], "+", "z"}], ")"}]}]}]}]], "Output",
 CellChangeTimes->{{3.6411113982927017`*^9, 3.641111408629787*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Norm", "[", 
   RowBox[{"x", "-", "y"}], "]"}], "\[Equal]", 
  RowBox[{"Norm", "[", 
   RowBox[{"y", "-", "z"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.641111474911529*^9, 3.641111493715743*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Norm", "[", 
   RowBox[{"x", "-", "y"}], "]"}], "\[Equal]", 
  RowBox[{"Norm", "[", 
   RowBox[{"y", "-", "z"}], "]"}]}]], "Output",
 CellChangeTimes->{3.641111494235066*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Norm", "[", 
   RowBox[{"yo", "+", 
    RowBox[{"g", 
     RowBox[{"(", 
      RowBox[{"z", "-", "x"}], ")"}]}], "-", "x"}], "]"}], "\[Equal]", 
  RowBox[{"Norm", "[", 
   RowBox[{"yo", "+", 
    RowBox[{"g", 
     RowBox[{"(", 
      RowBox[{"z", "-", "x"}], ")"}]}], "-", "z"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6411115231052856`*^9, 3.641111551710464*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Norm", "[", 
   RowBox[{
    RowBox[{"-", "x"}], "+", "yo", "+", 
    RowBox[{"g", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "x"}], "+", "z"}], ")"}]}]}], "]"}], "\[Equal]", 
  RowBox[{"Norm", "[", 
   RowBox[{"yo", "-", "z", "+", 
    RowBox[{"g", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "x"}], "+", "z"}], ")"}]}]}], "]"}]}]], "Output",
 CellChangeTimes->{{3.641111542971521*^9, 3.641111552166587*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"y0", "=", 
   RowBox[{"{", 
    RowBox[{"y01", ",", "y02"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z", "=", 
   RowBox[{"{", 
    RowBox[{"z1", ",", "z2"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"{", 
    RowBox[{"x1", ",", "x2"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y", "=", 
   RowBox[{"{", 
    RowBox[{"y1", ",", "y2"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6411116340972033`*^9, 3.641111674562029*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"y0", "=."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z", "=."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y", "=."}], ";"}]}], "Input",
 CellChangeTimes->{{3.6411116340972033`*^9, 3.641111674562029*^9}, {
  3.641111787042431*^9, 3.641111799865602*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Transpose", "[", 
   RowBox[{"yo", "+", 
    RowBox[{"g", 
     RowBox[{"(", 
      RowBox[{"z", "-", "x"}], ")"}]}], "-", "x"}], "]"}], ".", 
  RowBox[{"(", 
   RowBox[{"yo", "+", 
    RowBox[{"g", 
     RowBox[{"(", 
      RowBox[{"z", "-", "x"}], ")"}]}], "-", "x"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.641111572948235*^9, 3.641111628173696*^9}, {
  3.6411116907029247`*^9, 3.641111698254033*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "x1"}], "+", "yo", "+", 
      RowBox[{"g", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "x1"}], "+", "z1"}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{"-", "x2"}], "+", "yo", "+", 
      RowBox[{"g", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "x2"}], "+", "z2"}], ")"}]}]}]}], "}"}], "]"}], ".", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "x1"}], "+", "yo", "+", 
     RowBox[{"g", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "x1"}], "+", "z1"}], ")"}]}]}], ",", 
    RowBox[{
     RowBox[{"-", "x2"}], "+", "yo", "+", 
     RowBox[{"g", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "x2"}], "+", "z2"}], ")"}]}]}]}], "}"}]}]], "Output",
 CellChangeTimes->{
  3.641111628936699*^9, {3.641111679090208*^9, 3.641111698929596*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Transpose", "[", 
   RowBox[{"yo", "+", 
    RowBox[{"g", 
     RowBox[{"(", 
      RowBox[{"z", "-", "x"}], ")"}]}], "-", "z"}], "]"}], ".", 
  RowBox[{"(", 
   RowBox[{"yo", "+", 
    RowBox[{"g", 
     RowBox[{"(", 
      RowBox[{"z", "-", "x"}], ")"}]}], "-", "z"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.641111615142294*^9, 3.6411116216677732`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"yo", "-", "z1", "+", 
      RowBox[{"g", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "x1"}], "+", "z1"}], ")"}]}]}], ",", 
     RowBox[{"yo", "-", "z2", "+", 
      RowBox[{"g", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "x2"}], "+", "z2"}], ")"}]}]}]}], "}"}], "]"}], ".", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"yo", "-", "z1", "+", 
     RowBox[{"g", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "x1"}], "+", "z1"}], ")"}]}]}], ",", 
    RowBox[{"yo", "-", "z2", "+", 
     RowBox[{"g", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "x2"}], "+", "z2"}], ")"}]}]}]}], "}"}]}]], "Output",
 CellChangeTimes->{3.641111630578156*^9, 3.6411116813188353`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.641111708671167*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Transpose", "[", "yo", "]"}], "+", 
      RowBox[{"g", " ", 
       RowBox[{"Transpose", "[", "z", "]"}]}], "-", 
      RowBox[{"g", " ", 
       RowBox[{"Transpose", "[", "x", "]"}]}], "-", 
      RowBox[{"Transpose", "[", "x", "]"}]}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{"yo", "+", 
      RowBox[{"g", 
       RowBox[{"(", 
        RowBox[{"z", "-", "x"}], ")"}]}], "-", "x"}], ")"}]}], "==", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Transpose", "[", "yo", "]"}], "+", 
      RowBox[{"g", " ", 
       RowBox[{"Transpose", "[", "z", "]"}]}], "-", 
      RowBox[{"g", " ", 
       RowBox[{"Transpose", "[", "x", "]"}]}], "-", 
      RowBox[{"Transpose", "[", "z", "]"}]}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{"yo", "+", 
      RowBox[{"g", 
       RowBox[{"(", 
        RowBox[{"z", "-", "x"}], ")"}]}], "-", "z"}], ")"}]}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.6411117134287*^9, 3.641111774160392*^9}, {
  3.64111180981892*^9, 3.641111810652079*^9}, {3.64111185990666*^9, 
  3.6411118702847958`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"x", "+", 
      RowBox[{"2", " ", "g", " ", "x"}], "-", "yo", "-", 
      RowBox[{"2", " ", "g", " ", "z"}]}], ")"}], " ", 
    RowBox[{"Transpose", "[", "x", "]"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "x"}], "+", "z"}], ")"}], " ", 
    RowBox[{"Transpose", "[", "yo", "]"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "g", " ", "x"}], "+", "yo", "-", "z", "+", 
      RowBox[{"2", " ", "g", " ", "z"}]}], ")"}], " ", 
    RowBox[{"Transpose", "[", "z", "]"}]}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{{3.641111747501449*^9, 3.6411117665216303`*^9}, 
   3.641111806319788*^9, {3.6411118559883337`*^9, 3.641111870910334*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "+", 
       RowBox[{"2", " ", "g", " ", "x"}], "-", "yo", "-", 
       RowBox[{"2", " ", "g", " ", "z"}]}], ")"}], " ", 
     RowBox[{"Transpose", "[", "x", "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "x"}], "+", "z"}], ")"}], " ", 
     RowBox[{"Transpose", "[", "yo", "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "g", " ", "x"}], "+", "yo", "-", "z", "+", 
       RowBox[{"2", " ", "g", " ", "z"}]}], ")"}], " ", 
     RowBox[{"Transpose", "[", "z", "]"}]}]}], "\[Equal]", "0"}], "//", 
  "Expand"}]], "Input",
 CellChangeTimes->{{3.6411121204822397`*^9, 3.641112122501999*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"x", " ", 
    RowBox[{"Transpose", "[", "x", "]"}]}], "+", 
   RowBox[{"2", " ", "g", " ", "x", " ", 
    RowBox[{"Transpose", "[", "x", "]"}]}], "-", 
   RowBox[{"yo", " ", 
    RowBox[{"Transpose", "[", "x", "]"}]}], "-", 
   RowBox[{"2", " ", "g", " ", "z", " ", 
    RowBox[{"Transpose", "[", "x", "]"}]}], "-", 
   RowBox[{"x", " ", 
    RowBox[{"Transpose", "[", "yo", "]"}]}], "+", 
   RowBox[{"z", " ", 
    RowBox[{"Transpose", "[", "yo", "]"}]}], "-", 
   RowBox[{"2", " ", "g", " ", "x", " ", 
    RowBox[{"Transpose", "[", "z", "]"}]}], "+", 
   RowBox[{"yo", " ", 
    RowBox[{"Transpose", "[", "z", "]"}]}], "-", 
   RowBox[{"z", " ", 
    RowBox[{"Transpose", "[", "z", "]"}]}], "+", 
   RowBox[{"2", " ", "g", " ", "z", " ", 
    RowBox[{"Transpose", "[", "z", "]"}]}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.641112122828822*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"x", " ", 
     RowBox[{"Transpose", "[", "x", "]"}]}], "+", 
    RowBox[{"2", " ", "g", " ", "x", " ", 
     RowBox[{"Transpose", "[", "x", "]"}]}], "-", 
    RowBox[{"yo", " ", 
     RowBox[{"Transpose", "[", "x", "]"}]}], "-", 
    RowBox[{"2", " ", "g", " ", "z", " ", 
     RowBox[{"Transpose", "[", "x", "]"}]}], "-", 
    RowBox[{"yo", " ", 
     RowBox[{"Transpose", "[", "x", "]"}]}], "+", 
    RowBox[{"yo", " ", 
     RowBox[{"Transpose", "[", "z", "]"}]}], "-", 
    RowBox[{"2", " ", "g", " ", "z", " ", 
     RowBox[{"Transpose", "[", "x", "]"}]}], "+", 
    RowBox[{"yo", " ", 
     RowBox[{"Transpose", "[", "z", "]"}]}], "-", 
    RowBox[{"z", " ", 
     RowBox[{"Transpose", "[", "z", "]"}]}], "+", 
    RowBox[{"2", " ", "g", " ", "z", " ", 
     RowBox[{"Transpose", "[", "z", "]"}]}]}], "\[Equal]", "0"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{
  3.641112150765318*^9, {3.641112182621838*^9, 3.6411122267794437`*^9}, {
   3.641112259941329*^9, 3.641112322959064*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x", "+", 
        RowBox[{"2", " ", "g", " ", "x"}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"yo", "+", 
           RowBox[{"2", " ", "g", " ", "z"}]}], ")"}]}]}], ")"}], " ", 
      RowBox[{"Transpose", "[", "x", "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "yo"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "g"}]}], ")"}], " ", "z"}]}], ")"}], " ", 
      RowBox[{"Transpose", "[", "z", "]"}]}]}], "\[Equal]", "0"}], ",", 
   "yo"}], "]"}]], "Input",
 CellChangeTimes->{{3.641112415597907*^9, 3.641112431512446*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"yo", "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"x", " ", 
       RowBox[{"Transpose", "[", "x", "]"}]}], "+", 
      RowBox[{"2", " ", "g", " ", "x", " ", 
       RowBox[{"Transpose", "[", "x", "]"}]}], "-", 
      RowBox[{"4", " ", "g", " ", "z", " ", 
       RowBox[{"Transpose", "[", "x", "]"}]}], "-", 
      RowBox[{"z", " ", 
       RowBox[{"Transpose", "[", "z", "]"}]}], "+", 
      RowBox[{"2", " ", "g", " ", "z", " ", 
       RowBox[{"Transpose", "[", "z", "]"}]}]}], 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Transpose", "[", "x", "]"}], "-", 
        RowBox[{"Transpose", "[", "z", "]"}]}], ")"}]}]]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6411124227571*^9, 3.641112431969912*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox["x", "2"], "+", 
    RowBox[{"2", " ", "g", " ", 
     SuperscriptBox["x", "2"]}], "-", 
    RowBox[{"4", " ", "g", " ", "z", " ", 
     RowBox[{"Transpose", "[", "x", "]"}]}], "-", 
    SuperscriptBox["z", "2"], "+", 
    RowBox[{"2", " ", "g", " ", 
     SuperscriptBox["z", "2"]}]}], 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Transpose", "[", "x", "]"}], "-", 
      RowBox[{"Transpose", "[", "z", "]"}]}], ")"}]}]], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.641112483097261*^9, 3.6411125295063057`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"2", " ", "g"}]}], ")"}], " ", 
    SuperscriptBox["x", "2"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"2", " ", "g"}]}], ")"}], " ", 
    SuperscriptBox["z", "2"]}], "-", 
   RowBox[{"4", " ", "g", " ", "z", " ", 
    RowBox[{"Transpose", "[", "x", "]"}]}]}], 
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Transpose", "[", "x", "]"}], "-", 
     RowBox[{"Transpose", "[", "z", "]"}]}], ")"}]}]]], "Output",
 CellChangeTimes->{{3.641112513027521*^9, 3.641112529958033*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", 
   RowBox[{"(", 
    RowBox[{"x", "-", "z"}], ")"}], "yo"}], "\[Equal]", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", "g"}], "+", "1"}], ")"}], 
    SuperscriptBox["x", "2"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", "g"}], "-", "1"}], ")"}], 
    SuperscriptBox["z", "2"]}], "-", 
   RowBox[{"4", "g", " ", "z", " ", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.641112577923856*^9, 3.641112625908702*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", "g"}], "+", "1"}], ")"}], 
    SuperscriptBox["x", "2"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", "g"}], "-", "1"}], ")"}], 
    SuperscriptBox["z", "2"]}], "-", 
   RowBox[{"4", "g", " ", "z", " ", "x"}]}], "//", "FullSimplify"}]], "Input",\

 CellChangeTimes->{{3.6411126674947987`*^9, 3.641112670152281*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"x", "-", "z"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"x", "+", 
    RowBox[{"2", " ", "g", " ", "x"}], "+", "z", "-", 
    RowBox[{"2", " ", "g", " ", "z"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.64111267052811*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"yo", "\[Equal]", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"x", "+", 
     RowBox[{"2", " ", "g", " ", "x"}], "+", "z", "-", 
     RowBox[{"2", " ", "g", " ", "z"}]}], ")"}], "/", "2"}]}]], "Input",
 CellChangeTimes->{{3.6411126803460207`*^9, 3.641112694804667*^9}}],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"x", "+", 
      RowBox[{"2", " ", "g", " ", "x"}], "+", "z", "-", 
      RowBox[{"2", " ", "g", " ", "z"}]}], ")"}], "/", "2"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.641112729853362*^9, 3.6411127320671186`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", "g"}]}], ")"}], "x"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"2", "g"}]}], ")"}], "z"}]}], ")"}], "/", "2"}]], "Input",
 CellChangeTimes->{{3.641112739498515*^9, 3.641112780542224*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"m", "=", 
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "+", 
         RowBox[{"2", "g"}]}], ",", "1", ",", 
        RowBox[{"1", "-", 
         RowBox[{"2", "g"}]}], ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"1", "+", 
         RowBox[{"2", "g"}]}], ",", "1", ",", 
        RowBox[{"1", "-", 
         RowBox[{"2", "g"}]}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        RowBox[{"1", "+", 
         RowBox[{"2", "g"}]}], ",", "1", ",", 
        RowBox[{"1", "-", 
         RowBox[{"2", "g"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "2"}], "}"}]}], 
     "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.641112821115326*^9, 3.641112868058816*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"m", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.641112848905607*^9, 3.641112854941038*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0", "0"},
     {
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "g"}]}], ")"}]}], 
      FractionBox["1", "2"], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"2", " ", "g"}]}], ")"}]}], "0", "0"},
     {"0", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "g"}]}], ")"}]}], 
      FractionBox["1", "2"], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"2", " ", "g"}]}], ")"}]}], "0"},
     {"0", "0", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "g"}]}], ")"}]}], 
      FractionBox["1", "2"], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"2", " ", "g"}]}], ")"}]}]},
     {"0", "0", "0", "0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.641112849305904*^9, 3.641112870650028*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ultiMatrix", "=", 
   RowBox[{"(", 
    RowBox[{"Inverse", "[", "m", "]"}], ")"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.64111287886926*^9, 3.6411129056096487`*^9}, 
   3.6411129412967978`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"phi", "//", "ListPlot"}]], "Input",
 CellChangeTimes->{{3.641112908155603*^9, 3.641112910315556*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{2., 3.}, {3.1, 4.}, {4.2, 4.8}, {5., 5.9}, {6., 
      7.}}]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.9375, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{2., 6.}, {0, 7.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.641112910581024*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Norm", "/@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", "ultiMatrix", ")"}], ".", "phi"}], ")"}], "//", 
        "Differences"}], ")"}]}], "//", "N"}], "//", "Variance"}], ",", 
   RowBox[{"{", 
    RowBox[{"g", ",", "0.9245", ",", "0.9248"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.641112915225889*^9, 3.641113042304449*^9}, {
  3.641113098550654*^9, 3.641113282364594*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwl1HkwHGYUAPDNRpyDVMcRR8WmrqBEsagjG5HDFWRJ4moQQqWUktA0rrBZ
5ybNIuxSlZS1UclmQxu0TdXWZohjIrEoIUKxWBVLGNG+J398881vvm/ee/Pm
e59BRIJ/FJFAIATDwr38oaFsVsmCa8UVdtCitMv19Mm2LnRKdNBJtMay/41s
8DcOel5opmWmbg74ViXPGc3gDltfAzeFqRugc6sZnxeBQ/8UziyAW6hT7RXg
vVaSJLTGWR23OnD3rzqKaJ+Z/Bw+OHuPI2ce3Gs/3fsYnHQr1w19adzA/imY
194wJwaf9z3OHQZTwt8x0DbO3NF/wFr61U5okyyxxQp41+v5N3Pgc0Va9B2l
C65F62wuunPJ8D9lsIpvcBxarv8CWRtc42BjjWakfZ9mDO7Lr1mfBbukPRB9
Cv6SJn2CtqXwKBSwQuYQC61Am43zAVtr2iejZUhEfhBYnelBRRc2kkJDwEbG
gb5o9c/c5MLAR5ipXmgjak5wOLh8c4c7+ihNViYGzN5lTEaTmjL048DUAfMD
6M3Jt47x4OeHs83QL9SSAhPBU4HGRmgeRZyYDI5S1DVAV0W87L0Ejvh5Swed
f/WZxWVw1aSLJvrinc6CdLCw+G81dKSgdTYL/PGjQRU0V3CQRgeHF++URy8L
BCQG2H+8jIh++m+Ldwl42q9nawbM0bufygLT01020XUWLJMacNjs0Aa61pkm
4oCH9aa3bZ82oXEPPBT7/n7XQ6eAJnColWg7XnejTXIrOE/Kfp+PY37zD4zP
L5XbroemTRaCoxfPbNerGSU/0gO+8YSugV6JJa/0g9s5L7TRffHRys/BKQ++
1kfTUztcR8D1h1mm2/1IiGeNYb89qi3RUdFaaxPgbG+iHfoQ9ULjDFjZe9QN
HZARQ50DH2v+9ig6hntuQ4z9uWbtiS4ihB6RgMfCJ/zRogbvMSlYsOoZiS4J
UTUjlsE8Cetz0ayBtixVcHX5V/fRwtseUh3wj8SCUXS/5IP9JuDr4goVfK/7
ZAQxtuCNDPfjaHbC6Q4KuPSKdi469Pag6Qnw2ejcLrT7J+SGYLDoYroazoui
XZ/kPNhhbi0ErSkb4JwCrgpw5KM9LVrqssB5EePyOI+dukq6DLD8X55x6L15
JX5sMGmyrB9d7UW4wwHbL6jb4XzHiAIJzZjf8SYHfaq1KK0dXFlbq4X/xT6d
LX4P2jKyAE12C3o7Ap4i+SlLwEntpWdmwD8U3y1AvwoxFKLDHu+/jvZf49vN
4vnlu0z0AfP+D+fA68W8SvRSiVKPGKxo2ncPHR+beUiC9ZqdGkCP7VTloetX
F0Von6pK/SVwhyd9FG3xrGUT/eq736fR807S5mVwOfPgOjpk8KrhG7DCT6/f
obsT1ZhojRP5xCVwQ61l4grY1mpYCa1L+e0leik+Zze6cMTLRwr+hWyljt5M
GWlDP8ob3YOO2/2F2So4NarwI/T/y0BB8w==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.9245000000000001, 0.21844205},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0.9245, 0.9248}, {0.21844208000750148`, 0.2184429310953353}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6411129356708717`*^9, 3.64111304260859*^9}, {
  3.641113113331757*^9, 3.6411132830777597`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"ultiMatrix", "/.", 
      RowBox[{"{", 
       RowBox[{"g", "\[Rule]", "0.924"}], "}"}]}], ")"}], ".", "phi"}], ")"}],
   "//", "ListPlot"}]], "Input",
 CellChangeTimes->{{3.6411132927460213`*^9, 3.6411133152418613`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{2., 3.}, {3.3779675730265537`, 3.265237186735018}, {
      3.3891127040407483`, 4.492024984357333}, {5.435807018891952, 
      4.942712844550318}, {6., 7.}}]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.9375, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{2., 6.}, {0, 7.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.641113300112999*^9, 3.641113315526716*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "2"], 
       SuperscriptBox["b", "2"]}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "x"}], ")"}], "2"], 
       SuperscriptBox["bp", "2"]}], "+", 
      SuperscriptBox["a", "2"], "+", 
      RowBox[{"2", "x", 
       RowBox[{"(", 
        RowBox[{"1", "-", "x"}], ")"}], "bbp"}], "-", 
      RowBox[{"2", "x", " ", "ba"}], "-", 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{"1", "-", "x"}], ")"}], "bpa"}]}], "\[Equal]", 
     SuperscriptBox["r", "2"]}], ",", "x"}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.641120004219613*^9, 3.641120110930253*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox[
      RowBox[{"ba", "-", "bbp", "+", 
       SuperscriptBox["bp", "2"], "-", "bpa", "-", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"4", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"ba", "-", "bbp", "+", 
              SuperscriptBox["bp", "2"], "-", "bpa"}], ")"}], "2"]}], "-", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["b", "2"], "-", 
             RowBox[{"2", " ", "bbp"}], "+", 
             SuperscriptBox["bp", "2"]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["a", "2"], "+", 
             SuperscriptBox["bp", "2"], "-", 
             RowBox[{"2", " ", "bpa"}], "-", 
             SuperscriptBox["r", "2"]}], ")"}]}]}]]}]}], 
      RowBox[{
       SuperscriptBox["b", "2"], "-", 
       RowBox[{"2", " ", "bbp"}], "+", 
       SuperscriptBox["bp", "2"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox[
      RowBox[{"ba", "-", "bbp", "+", 
       SuperscriptBox["bp", "2"], "-", "bpa", "+", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"4", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"ba", "-", "bbp", "+", 
              SuperscriptBox["bp", "2"], "-", "bpa"}], ")"}], "2"]}], "-", 
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["b", "2"], "-", 
             RowBox[{"2", " ", "bbp"}], "+", 
             SuperscriptBox["bp", "2"]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["a", "2"], "+", 
             SuperscriptBox["bp", "2"], "-", 
             RowBox[{"2", " ", "bpa"}], "-", 
             SuperscriptBox["r", "2"]}], ")"}]}]}]]}]}], 
      RowBox[{
       SuperscriptBox["b", "2"], "-", 
       RowBox[{"2", " ", "bbp"}], "+", 
       SuperscriptBox["bp", "2"]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.641120105550997*^9, 3.6411201141788893`*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6411202747188787`*^9, 3.641120275426832*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.641120005806459*^9, 3.6411200216427298`*^9}}]
},
WindowSize->{956, 1037},
WindowMargins->{{Automatic, 0}, {Automatic, 20}},
FrontEndVersion->"10.1 for Linux x86 (64-bit) (March 23, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 3012, 79, 145, "Input"],
Cell[CellGroupData[{
Cell[3437, 96, 1346, 35, 107, "Input"],
Cell[4786, 133, 157982, 2603, 328, 43935, 732, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162805, 2741, 1006, 29, 50, "Input"],
Cell[163814, 2772, 1369, 33, 240, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[165220, 2810, 1161, 31, 68, "Input"],
Cell[166384, 2843, 1425, 34, 228, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[167846, 2882, 1001, 29, 50, "Input"],
Cell[168850, 2913, 1914, 40, 317, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170801, 2958, 1106, 26, 50, "Input"],
Cell[171910, 2986, 15960, 321, 219, "Output"]
}, Open  ]],
Cell[187885, 3310, 1168, 22, 31, "Input"],
Cell[CellGroupData[{
Cell[189078, 3336, 427, 11, 31, "Input"],
Cell[189508, 3349, 1941, 39, 387, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[191486, 3393, 568, 12, 31, "Input"],
Cell[192057, 3407, 213, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[192307, 3415, 320, 7, 31, "Input"],
Cell[192630, 3424, 102, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[192769, 3430, 436, 15, 35, "Input"],
Cell[193208, 3447, 302, 8, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193547, 3460, 747, 23, 59, "Input"],
Cell[194297, 3485, 1003, 27, 243, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[195337, 3517, 689, 23, 59, "Input"],
Cell[196029, 3542, 543, 18, 59, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[196609, 3565, 1221, 36, 57, "Input"],
Cell[197833, 3603, 246, 6, 59, "Output"]
}, Open  ]],
Cell[198094, 3612, 96, 1, 29, "Input"],
Cell[CellGroupData[{
Cell[198215, 3617, 464, 13, 31, "Input"],
Cell[198682, 3632, 723, 23, 59, "Output"]
}, Open  ]],
Cell[199420, 3658, 1173, 33, 59, "Input"],
Cell[200596, 3693, 94, 1, 29, "Input"],
Cell[200693, 3696, 912, 25, 59, "Input"],
Cell[CellGroupData[{
Cell[201630, 3725, 735, 23, 31, "Input"],
Cell[202368, 3750, 1271, 41, 59, "Output"]
}, Open  ]],
Cell[203654, 3794, 268, 7, 31, "Input"],
Cell[CellGroupData[{
Cell[203947, 3805, 422, 9, 31, "Input"],
Cell[204372, 3816, 4882, 130, 281, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[209291, 3951, 270, 8, 31, "Input"],
Cell[209564, 3961, 1023, 27, 243, "Output"]
}, Open  ]],
Cell[210602, 3991, 127, 2, 31, "Input"],
Cell[210732, 3995, 94, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[210851, 4000, 210, 6, 31, "Input"],
Cell[211064, 4008, 246, 7, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[211347, 4020, 232, 6, 31, "Input"],
Cell[211582, 4028, 209, 6, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[211828, 4039, 402, 12, 31, "Input"],
Cell[212233, 4053, 477, 15, 31, "Output"]
}, Open  ]],
Cell[212725, 4071, 548, 17, 88, "Input"],
Cell[213276, 4090, 375, 10, 86, "Input"],
Cell[CellGroupData[{
Cell[213676, 4104, 441, 13, 31, "Input"],
Cell[214120, 4119, 945, 32, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[215102, 4156, 392, 12, 31, "Input"],
Cell[215497, 4170, 834, 27, 31, "Output"]
}, Open  ]],
Cell[216346, 4200, 68, 1, 29, "Input"],
Cell[CellGroupData[{
Cell[216439, 4205, 1156, 34, 50, "Input"],
Cell[217598, 4241, 807, 22, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[218442, 4268, 783, 23, 50, "Input"],
Cell[219228, 4293, 906, 23, 50, "Output"]
}, Open  ]],
Cell[220149, 4319, 1065, 27, 50, "Input"],
Cell[CellGroupData[{
Cell[221239, 4350, 811, 25, 31, "Input"],
Cell[222053, 4377, 815, 22, 63, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[222905, 4404, 622, 18, 66, "Input"],
Cell[223530, 4424, 657, 21, 66, "Output"]
}, Open  ]],
Cell[224202, 4448, 503, 17, 35, "Input"],
Cell[CellGroupData[{
Cell[224730, 4469, 439, 15, 35, "Input"],
Cell[225172, 4486, 275, 8, 31, "Output"]
}, Open  ]],
Cell[225462, 4497, 294, 7, 31, "Input"],
Cell[225759, 4506, 320, 9, 31, "Input"],
Cell[226082, 4517, 354, 12, 31, "Input"],
Cell[226439, 4531, 1011, 30, 59, "Input"],
Cell[CellGroupData[{
Cell[227475, 4565, 125, 2, 31, "Input"],
Cell[227603, 4569, 1692, 54, 144, "Output"]
}, Open  ]],
Cell[229310, 4626, 231, 6, 31, "Input"],
Cell[CellGroupData[{
Cell[229566, 4636, 125, 2, 31, "Input"],
Cell[229694, 4640, 903, 26, 243, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[230634, 4671, 528, 15, 31, "Input"],
Cell[231165, 4688, 2585, 53, 214, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[233787, 4746, 305, 9, 31, "Input"],
Cell[234095, 4757, 1024, 27, 243, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[235156, 4789, 769, 24, 38, "Input"],
Cell[235928, 4815, 2227, 63, 159, "Output"]
}, Open  ]],
Cell[238170, 4881, 94, 1, 29, "Input"],
Cell[238267, 4884, 94, 1, 29, "Input"]
}
]
*)

